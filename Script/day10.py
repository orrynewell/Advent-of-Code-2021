"""
Advent of Code - Day 10: Syntax Scoring
Link to Description - https://adventofcode.com/2021/day/10
"""

import datetime as dt


def clean_data(data):
    """
    Clean Data - Puts the raw data into a list of list to be processed row by row
    :param data: The raw data
    :return: A cleaned list of list
    """
    data = data.replace(" ", "")
    return_list = []
    short_list = []
    for i in data:
        if "\n" == i:
            return_list.append(short_list)
            short_list = []
        else:
            short_list.append(i)
    return_list.append(short_list)
    return return_list


def process_data(data):
    """
    Process Data - Processes the data line by line.
    Give the line score if a corrupt value is found or an incomplete line is found
    :param data: The list of list of data
    :return: Nothing
    """
    total_score = 0
    incomplete_scores = []
    for sub_set in data:
        cont = True
        print("Processing Line {}".format(data.index(sub_set)))
        stack = []
        for s in sub_set:
            if s in ['(', '[', '{', '<']:
                stack.append(s)
            elif s == ')' and stack[len(stack) - 1] == '(':
                stack.pop()
            elif s == ']' and stack[len(stack) - 1] == '[':
                stack.pop()
            elif s == '}' and stack[len(stack) - 1] == '{':
                stack.pop()
            elif s == '>' and stack[len(stack) - 1] == '<':
                stack.pop()
            else:
                print("\tI expected {} but got {} - {} Points".format(diff_dict[stack[len(stack) - 1]],
                                                                      s,
                                                                      corrupt_score_dict[s]))
                total_score += corrupt_score_dict[s]
                cont = False
                break
        if stack and cont:
            opp_stack = []
            local_score = 0
            for i in range(len(stack)):
                opp_stack.append(diff_dict[stack[len(stack) - (1 + i)]])
            for o in opp_stack:
                local_score = (local_score * 5) + auto_complete_dict[o]
            print("\tAuto Complete Score - {}".format(local_score))
            incomplete_scores.append(local_score)
    incomplete_scores = sorted(incomplete_scores)
    print("Total Score - {}".format(total_score))
    print("Middle Score - {}".format(incomplete_scores[int(len(incomplete_scores) / 2)]))


def app():
    """
    App - Calls the functions
    :return: nothing
    """
    start_data = """{[<<([[{{[<[[[<>()]{[]<>}]]<[[{}()>{[]{}}]>>][((<{{}[]}{[][]}>({{}{}}{{}[]})))([{({}[])}(<
[[{[<[<[<<([[<<>[]>([]())][<<>[]><<>{}>>][(<{}()><<>>)]){{<<(){}><[]<>>>{([][])<[]{}>}}{[<[]<
<[([[[({[([<<[[]()]{[]{}}>(<[]{}>{{}()})>{{(<><>)[{}()]}([()<>][<>])}]{[{({}())[[]{}]}]((<<>[]>)<(<>())
{[(({<{[{{[{[[[][]]<[]()>]<[{}[]]>}[<(()<>)<{}[]>>{([][])(()())}]](<<{()<>}>[{<>{}}{{}<>}]>)}(([([(){}]<<
<{[[{[<<[({(({<>{}}(<>{})){{{}()}(<>{})})<<<<>()>{()}>{[{}()][()<>]}>}{([{{}{}}]<{{}()}((){})>)({<[](
<<<[[<({(<(([<{}()>]([()]{()}))<{{{}<>}<<>()>}[[()<>]<<><>>]>)>)[({[({<><>}<<>[]>){[{}()]{()<>}}][{<{
{{(({<<{{[((<(<>[])<[]()>><[<>[]](()[])>)[({()}({}[]))[({}<>)[{}<>]]])[([([]<>)<()<>>}{[(){}]
<{[{<(([{[{{{{<>[]}<()<>>}(((){})<[][]>)}{[[{}<>]]<{<>{}}{<><>}>}}]}{<{[<[()()][<>()]>(<<>[]><()<>})](
(<((<[<(([[((({}<>)<{}()>){{[]}[()<>]})([{[][]}<<>()>])]{<[{<>()}[<>()]][([]())<[]()>]>[(<{}[]>(()())){([
[{(<{[<(([<<<<[]()>[<>{}]>[((){})(()<>)]><(([]<>){()<>}){[{}]{[]()}}>>([<<<>[]>{<>{}}>{<[]{
<{[<({{[(<<<[{()[]}][[(){}]<<>()>]>>>((<[<[]()>(<>())][[[]<>](<><>)]>(<<[]()><<>[]>>({()}<<>[]>)))[
{(([[(<[[<{[(<[]<>><<><>>)]}>]]>{[[{([{<{}{}>[<>[]]}<[<>{}]<()<>>>][{<{}>{<><>}}{{{}[]}([]())}])
{<<{<[<[<<({{(()[])}<{{}{}}([]())>})[(<{{}{}}((){})>[[<>[]][<>[]]])[{<[]()>{{}<>}}{{[]{}}<[]()>}]]>>]>{
<([{{{{(<((<{[{}[]][[]<>]}>{<(<>{})(<><>)}})[{(<<>>({}{}))(({}{}){[]})}])<<<{<<>[]>{()[]}}>{<({}[])>[[[]<
({<{<(<[<<(<{[<><>]<{}()>}[({}{}){()[]}]><<(()<>){{}{}}>(<[][]>[[][]])>)>{<[(<{}[]>[()()])({[]()}<
{[{({<(((<[{(({}())(<><>))<[<>{}]{()[]}>}([([]<>)([][])}(<[]{}><[]{}>))](([([][])({}<>)]([[]()]{[]
(((([<[(<[<<[{<><>}{{}<>}]<<()>>>>]>{([{<({}{})>[(()<>)[()()]]}[{([]())[{}[]])({{}<>}{{}{}})]])[((<<(){}
{([(({[[<[{([[<>()]][(<>[])([]{})]><<(()<>)([]{})>([<>{}])>}([<<{}[]>(<>[])>{[()<>]<()[]>}]{[[[][]][[]()]]
[[<({<<<<(<([({}())[<>{}]]{[()<>]{{}[]}})((<<><>>[<>{}])<(<>{}){{}()}>)]<<<{<>{}}((){})>([[]()]{{}})><(({}<
<[{[{{<([(({[[<><>]{<><>}]}<((()<>))[<()()>{[][]}]>)[(({<><>}({}())){<[]()>})])<(<<[()<>]((){})><[()<>](<>
[{{{{[[{{{(<{{[]<>}{<>{}}}<{[]{}}[[]]>><({()()}{<><>})[(<><>)]>)}[(<<(<><>)([][])>[[()[]]{()<>}]>{(<
((<({(<({{{[{{{}<>}<[]{}>}{{[]{}}{{}[]}}](<[<>()]>)}}<([{[{}{}]{<>()}}<<()[]>([]<>)>]<<[()[
<[<([(<{[(<[[{[]{}}{{}}](([]{})([][]))][[<[][]>{{}<>}]<[{}<>][[]]>]>[{<({}{})<[][]>>[{<>}]}{<[{}[]]>}]
{(({{[<([[{((([]<>)[<>()])[({}{})(()<>)])(<{[]<>}([]<>)>{<<>()>({}<>}})}][<{[{<>{}}<()<>>](<<><>>({
<{({(({{<{[(({{}<>})[<[][]>])]<<[<{}[]>(()[])]<(<><>)[<><>]>]{{{()[]}(<><>)}({()()}[<>{}])}>
<[<<[<[{({[<[<()()><[]{}>]{<{}{}>[[]{}]}>[<[[]<>]<<>[]>><{<>[]}([]{})>]]})}[[[<[<[<>]<()()>>({()[]}<()<>>
[(<<{<[[{((<({[]<>}[()[]])(<[]{}>({}[]))>(((<><>)<{}<>>)<{[]{}}<[][]>>)))}[<[((<(){}>{[]})[[[]<>]([]<
[{[({[{<<{<<(<<>{}>{[]()})[{[][]}<{}{}>]><([{}[]][<>()])({[][]})>>[<{<()()>[{}<>]}<([]{})(<>{})>><[(()()){(
{<([[{<[(<<<[<[][]>]({()[]}{[][]})>>{{{[{}<>][[]{}]}[{{}()}(<>())]}<([[][]]{()[]})<{{}{}}<(){}>>>}>[[(
({[[((<<{[<{{([][])(<>[])}<[()[]][[]{}]>}[<[<>{}]([]{})><(<>[])<(){}>>]>[[[({}{})((){})){<()<>>{{}
{<<{({({[{{{{(<>{})({})}<({}()>(()[])>}[<[<>[]]>{{<>{}}(()<>)}]}[<{<()<>>{<>{}}}[<[]{}>(<>())]>(<[{}(
[[{<((<<[[{<(<()[]>([]{}))<<<>{}>(())>>[({[]<>}(()<>))<({}<>)<[]<>>>]}](({<[()[]][{}]>}<(([]<>)<<>>)
<{{((((<{([([(<>[]){()()}]{(<>())([]())})]{[<(<>[])>{[()[]]<[]<>>}]<(({}<>)({}()))>})<[<{<{
<[({<<[{<[<([([]{})[()())][<()[]><<>()>])([(<>())])><[<[()<>]><{<><>}<[]>>]>]([{[[<>{}]{{}{}}]<{
<[{[[<{[<({<((()[]){{}[]})<(<>[])[<>()]>>})>]}>][(([((<[{({}{})<[]{}>}]<([<>{}](()()))(<<>{}><(
<{[[([{[<([(<(<>[])><([][])[[][]]>)(({<>[]}[{}()])[{()<>}{<>}])]<(<(()[])<<>{}>>{<<><>>[[]()]}){<{<>()}{
{<{<{{<({<(<<{()()}>({[]{}}[{}{}])>)<<({{}()}({}{}))<{[]()}{<><>}>>[[<()()>(<>())]]>]})<<{[[((
((<((<<([({([{[]<>}[()()]][[[][]]({}())])})(([<<[]<>>(<>)>]<{({}[]){{}}}{<{}[]>({}())}>){<
{<((<<[<{{[({<[]()>{[]{}}}({[][]}[{}{}]))[<[[]{}]{{}[]}>]]}[{[<[()()]<<>[]>>]{[<<>{}>(<>{})](
<{<<{({[<<<<([()<>]<<>[]>)(<()><{}()))><{<[]{}>[[]]}>>>[{([[{}<>]](<<>[]><{}<>>))[(({}{}){{}[]})((<>[])[<>(
{<[{(<<[{(<(((()())[{}{}])<{()<>}[{}]>){{{()}{[]<>}}[[[]<>]{<><>}]}>)}({<<(({}()))<([]()}[<><>]>>{[[<>()]
<([[[<<([(<([(()())][<{}()>((){})])(([<>()]{<>[]})[[(){}]<()<>>])>)(([[{{}[]}[{}()]][<(){}><(){}>]]{{<<>{}>
(([([{{{<([<<{(){}}<()<>>>{<<><>>[{}()]}>({<<>{}>[()()]}<<<>{}>>}])[{{[([]())({}<>)]<<<>()>[()[]]
{(<({<([{([{(({}))[{<>[]}[{}()]]}[({()<>}{<>()})<([]()){{}()}>]]({<<[][]>([]<>)><{()<>}{(){}}>
[[{({{{({<(<[({}<>)([]())]>(({{}{}}{()<>})>)[{{<<>{}><[]{}>}<<[][]><[][]>>}<(([]<>)<{}{}>)>]>
([{{([(({({<[{()[]}<[]()>]<<{}<>><()[]>>>(<(<>[])<{}{}>>([{}{}]({}())))}([({{}[]>{{}{}})<<{}()><{}>>]<{<{}{}
[<((<<[{[[[<(<<><>><<>()>)>]]]{<{<<[{}<>][{}{}]>(<{}[]>([]()))><<<<>{}>>{[<>{}]{<>[]}}>}[{(
(((<({{[(({[[([]{})({}{})](([]{}){{}{}})]{(<[]{}>[[]()])(<()()><()<>>)}}))<{[{(<{}>{[]<>})}{
[([{{(<<({(<<<[][]>{[]<>}){({}())[[]{}]}>){[({<>[]}{[]<>})]{({()<>}{()[]})}}}[(([[()[]][()()]](<<>{}>
[<{({<<([<[[{[[]{}>{<>()}}<[<>{}]{()<>}>]]>{[(<([]{}){{}[]}>{{[]{}}(<>[])})((({}<>)(()()))[<
<<<([{{<[<([[{<>()}[[]<>]]][<<()()>{()<>}>[[<>{}]<{}<>>]]){((<[]{}><{}<>>))}>[[(<([]())>(({}[])))
{({<([[{({{{[{<>{}]<[]()>]}([<[]<>><()<>>][([]<>)<{}()>])}[{<{{}{}}<()<>>>}]}[{[[<<>[]>([][])][<<>{}>[<
(((([[[((<[<[((){})<{}<>>]>(<[{}](()<>)><[<>{}][<>()]>)]>([(([()[]]<{}>)([<>[]]{()()}))]))(<[<<{<>()}<{}>>(
<{[((([[({[<<[{}()>[{}{}]>>{[(()())[{}{}]]}]})<[[((([]<>)<<>[]>){({}<>){<>()}})<<[<>[]]([]())>([{}[]
{<([[{<[{{<{{([][]><<><>>}<{()()}<[]()>>}<(({}<>)<{}[]>)>>}}[{(([(<><>)<[][]>]{(()())}){{(()[
<(({([({<[(((<[]>)({{}<>}[[]{}])))[[[(<><>)(<>[])]<{<>}([]{})>]{(({}{}))<{{}<>}{[]{}}>}]]{<{{([
<[[{(<[{(<([(([]<>)[<>])])>)}<{[({({()<>}[<>{}])<{<><>}<{}{}>>}{<[<>[]]<<>[]>>[{()()}[{}<>]]}){{<<[][]>({}<
<[{(<{[[[[{[[<[]{}>{[]<>}]<[{}{}]<{}<>>>]((<{}<>>)[{()}(<>[])])}({[{{}()}[{}()]][<(){}}(()<>)]}<[[
<<(<[[<<([{<({()<>}(()<>)>([()][[]{}])>}])>{[([[<[<><>]({}{})>(<<><>>{()<>})]][(({{}()}{()()})<{<>()}[[]<
<(<({<[{<{<[{{{}()}({}<>)}<[[]()][<>{}]>]>((<[()<>]{[]<>}>((<>())<[]()>)))}{[(([()()]<(){}>){<()<>>[
[[[([{<([<<<{[()<>]{()[]}}<([]())[{}[]]>><<[[]<>]>{<[]{}><<>()>}>>([{{[]<>}(()())}[<<>>{<>{}}]](([<>()]<<>()
{<([{[{{<[<[[{{}}([]{})]]<<{<>{}}><[(){}]>>>(([(<>)<()[]>][{{}[]}(<>[])]){<{<>[]}<<>[]>>{<<>[]>{
{[[{<[[<<[[([{()[])[[][]]]{{()()}})]]>>[{{<[{(<><>)}<<()[]>({}())>]<[({}<>)]>>[[{[[]()]<<>{}>}[[<>{}]<()
[({{{<[([[{[[({}{})][<<>{}>{{}[]}]]({<[][]>}(({}<>)({}<>)))}<[{({})}({()()}<[]{}>>]((<[]{}>[{}{}]))>]{{{<{[]{
<[<<[{[{{<(<{{()<>}{{}{}}}[[[]{}]]>[[<()()><[]()>]([[]{}])])>[{[[([]()){()}][([]())[<>[]]]]}]}}{<[[[(<{}()>{{
<[{<{[[<<([[{(<><>)[(){}]}]]((([()<>]<<>[]>)[<[][]>({}<>)])))[<[<[<>()][(){}]}{[()()]}]{({()()}(()
[<{[((<<{((<({{}<>}{()[]}){{{}[]}(()())}]{<<{}()>{<>()}>})([{[{}{}][[]()]}<[{}[]]<<>()>>]))}<<{(
{({{([([[{{(<<()<>><(){}>>)<[({}())(<><>)]{[<>()][()[]]}>}({[{{}<>}[[]{}}]}{(<{}[]><{}>)(<[][]>[{}<>
({[[<({{[<((((()<>)<()<>>)<{[][]}[[]<>]>)({(()<>){{}[]}][(()[])[[][]]]))([<<()()>{<><>}>({{}[]}((){})
{<{[(<(<({{<<(<>[])<<><>>><<[][]>(()[])>>[[([]<>)([]<>)][<()()>]]}}{(<{{<><>}(()<>)]{[[]()]
[[[[<[{{[{<[<[<><>]>](<(()[]){{}[]}><(<>{})[{}()]>)>(<{{[]<>}<<><>>}[<{}<>>[{}()])>)}({[<<(
[{{<{[(([{{{((<>[])<{}{}}){<{}[]>([])}}{<{<><>}({}[])>{{()[]}{[][]}}}}<<{[<>{}](<><>)}<{{}
<[[{(<[{(({<<<<>[]><{}<>]><<()()><()()>>>{[<()<>>{[]}]<<()()>{[][]}>}}[{(<{}[]>[{}[]])}{[{{}<>}
{[((<{([[({<([()<>][[][]])([()()]{[][]})>[[[{}]>({[][]}{[][]})]}<[[{<>[]}<()()>]{<[]()>}]>)][[<{
(<<{(({[[<[<<[{}<>]>{{{}<>}((){})}>][<[{()[]}{{}[]}]>(<{<>{}}[<><>]>{[[]{}]<{}()>})]>]<[[[{[()[]]({}[])}([{}
[[{([<<{[<([{{(){}}{{}[]}}[{<>()}]][<[<>{}}[[]]>({[]{}}<<>[]>)])(({[{}{}](()<>)}[(<><>){{}()}]))
<<<({[{[<<((({<>{}})({<>{}}<[]<>>)))[<[<{}<>><{}<>>]([[]{}][()<>])>(([{}{}]{{}<>})({[]{}}[[]<
{[[[[[{{<<<<{[{}()]([][])}{<[]()>({}{})}>([[[]{}]][[(){}][{}{}]])>{([[{}{}]({}<>)]([<><>][()<>]))}>
[[<(([[(([[(([()[]]<{}<>>){{{}()}[[]()>})][<[[(){}][[]{}]][<{}[]><[]<>>]>{(<<>{}><()()>)(<()()><{}[]>)
[<([(<[<<(([{{{}()}<{}[]>}[<<>()><<>()>]]))({<<{[]()}>{{[][]}<[]{}>}}[{([])<[][]>}]}{<[[[]()]{<>{}}]{<[][]>}
{{{[[[{<<{<(<[{}{}](<>())>[{[][]}[{}<>]])[[(()[])({}())]{([]{})(()<>)}]>((([{}]{[]<>}))([{()[]}{{}
[[(([{<[((<([{{}()}[()<>]]{<<><>>[[]<>]})([[<><>]([])]((<>()){<>[]}))><(<({})<()()>>)(<<<>{}>([]())>{<[][
(<{({(<<(<{(({{}()}<[]<>>))[<<{}{}>[(){}]>]}<[(({}{})<()()>)[{()()}<[]>]](([[][]])([(){}]<[]()>))>>)
<[{[<(<(({[<[(()<>)]{<()()><[]()>}>[{(<><>)[[]{}]}{({}<>)<(){}]}]]{(<[()<>]{<><>}>[{{}<>}({}[
<[(<<[{{[[[<<<[]()><[]{}>>[([]()){()[]}]>({[[]()]<{}{}>}{[()[]]<{}{}>})]]]{([{<<{}[]>>}][[[[<>
<{[[({{[<<<[<({})[[]]>]>>{[[[[()<>][()()]](<{}<>>)](<<[][]>[[]<>]>)]}>[<<[<<(){}>[<>()]>]<(((){}){{}
[(<[<(<<{[([[{<>[]}([]())]<([]<>)[<>()]>]<[{(){}}[[][]]](<[]{}><{}<>>)>)]<{<<<[][]>>({(){}}[{}<>])
{({([[{{(((<(<[]()>{<><>})(<(){}}<()[]>)><[{()[]}(()())][[{}<>]{[]{}}]>){([[{}{}](())])(<<()<>>[[][]
(([[[<([[<[<[<{}{}>][<(){}>[<>[]]]>(([[]()][()]}{<[]{}><[]<>>})][(({()<>}<[]<>>)[[[]]]){[{()[]}<()()
({{<[(([[{<<<[[][]]>[{()<>}<{}()>]>>(<<{()}[()<>]>><{(()<>)([]{})}>)>](<({{{()[]}[(){}]}[{{}{}}"""
    cleaned_data = clean_data(start_data)
    process_data(cleaned_data)


if __name__ == '__main__':
    """
    Main - Runner
    """
    start_time = dt.datetime.now()
    diff_dict = {
        "[": "]",
        "(": ")",
        "{": "}",
        "<": ">"
    }
    corrupt_score_dict = {
        ")": 3,
        "]": 57,
        "}": 1197,
        ">": 25137
    }
    auto_complete_dict = {
        ")": 1,
        "]": 2,
        "}": 3,
        ">": 4
    }
    print("Start Time - {}".format(start_time))
    app()
    end_time = dt.datetime.now()
    print("End Time - {}\nElapsed Time - {}".format(end_time, end_time - start_time))
